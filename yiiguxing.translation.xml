<application>
  <component name="AppStorage">
    <histories>
      <item value="minus Seconds" />
      <item value="digit" />
      <item value="/**&#10;     * Parses the string argument as an unsigned integer in the radix&#10;     * specified by the second argument.  An unsigned integer maps the&#10;     * values usually associated with negative numbers to positive&#10;     * numbers larger than {@code MAX_VALUE}.&#10;     *&#10;     * The characters in the string must all be digits of the&#10;     * specified radix (as determined by whether {@link&#10;     * java.lang.Character#digit(char, int)} returns a nonnegative&#10;     * value), except that the first character may be an ASCII plus&#10;     * sign {@code '+'} ({@code '\u005Cu002B'}). The resulting&#10;     * integer value is returned.&#10;     *&#10;     * &lt;p&gt;An exception of type {@code NumberFormatException} is&#10;     * thrown if any of the following situations occurs:&#10;     * &lt;ul&gt;&#10;     * &lt;li&gt;The first argument is {@code null} or is a string of&#10;     * length zero.&#10;     *&#10;     * &lt;li&gt;The radix is either smaller than&#10;     * {@link java.lang.Character#MIN_RADIX} or&#10;     * larger than {@link java.lang.Character#MAX_RADIX}.&#10;     *&#10;     * &lt;li&gt;Any character of the string is not a digit of the specified&#10;     * radix, except that the first character may be a plus sign&#10;     * {@code '+'} ({@code '\u005Cu002B'}) provided that the&#10;     * string is longer than length 1.&#10;     *&#10;     * &lt;li&gt;The value represented by the string is larger than the&#10;     * largest unsigned {@code int}, 2&lt;sup&gt;32&lt;/sup&gt;-1.&#10;     *&#10;     * &lt;/ul&gt;&#10;     *&#10;     *&#10;     * @param      s   the {@code String} containing the unsigned integer&#10;     *                  representation to be parsed&#10;     * @param      radix   the radix to be used while parsing {@code s}.&#10;     * @return     the integer represented by the string argument in the&#10;     *             specified radix.&#10;     * @throws     NumberFormatException if the {@code String}&#10;     *             does not contain a parsable {@code int}.&#10;     * @since 1.8&#10;     */" />
      <item value="时标" />
      <item value="计算" />
      <item value="处理" />
      <item value="    /**&#10;     * Removes all of the elements from this list (optional operation).&#10;     * The list will be empty after this call returns.&#10;     *&#10;     * @throws UnsupportedOperationException if the &lt;tt&gt;clear&lt;/tt&gt; operation&#10;     *         is not supported by this list&#10;     */" />
      <item value="    /**&#10;     * Returns the index of the last occurrence of the specified element&#10;     * in this list, or -1 if this list does not contain the element.&#10;     * More formally, returns the highest index &lt;tt&gt;i&lt;/tt&gt; such that&#10;     * &lt;tt&gt;(o==null&amp;nbsp;?&amp;nbsp;get(i)==null&amp;nbsp;:&amp;nbsp;o.equals(get(i)))&lt;/tt&gt;,&#10;     * or -1 if there is no such index.&#10;     *&#10;     * @param o element to search for&#10;     * @return the index of the last occurrence of the specified element in&#10;     *         this list, or -1 if this list does not contain the element&#10;     * @throws ClassCastException if the type of the specified element&#10;     *         is incompatible with this list&#10;     *         (&lt;a href=&quot;Collection.html#optional-restrictions&quot;&gt;optional&lt;/a&gt;)&#10;     * @throws NullPointerException if the specified element is null and this&#10;     *         list does not permit null elements&#10;     *         (&lt;a href=&quot;Collection.html#optional-restrictions&quot;&gt;optional&lt;/a&gt;)" />
      <item value="millis" />
      <item value="mutu" />
      <item value="别名" />
      <item value="precis" />
      <item value="Selected region contains block comment suffix" />
      <item value="电量" />
      <item value="温度" />
      <item value="版本" />
      <item value="型号" />
      <item value="延时" />
      <item value="采集" />
      <item value="sign-off" />
      <item value="amend" />
      <item value="查询" />
      <item value="sensor" />
      <item value="Unsigned" />
      <item value="统计" />
      <item value="再次" />
      <item value="再一次" />
      <item value="重复" />
      <item value="    /**&#10;     * Sets the maximum number of digits allowed in the fraction portion of a&#10;     * number. maximumFractionDigits must be &amp;ge; minimumFractionDigits.  If the&#10;     * new value for maximumFractionDigits is less than the current value&#10;     * of minimumFractionDigits, then minimumFractionDigits will also be set to&#10;     * the new value.&#10;     *&#10;     * @param newValue the maximum number of fraction digits to be shown; if&#10;     * less than zero, then zero is used. The concrete subclass may enforce an&#10;     * upper limit to this value appropriate to the numeric type being formatted.&#10;     * @see #getMaximumFractionDigits&#10;     */" />
      <item value="    /**&#10;     * Sets the maximum number of digits allowed in the integer portion of a&#10;     * number. maximumIntegerDigits must be &amp;ge; minimumIntegerDigits.  If the&#10;     * new value for maximumIntegerDigits is less than the current value&#10;     * of minimumIntegerDigits, then minimumIntegerDigits will also be set to&#10;     * the new value.&#10;     *&#10;     * @param newValue the maximum number of integer digits to be shown; if&#10;     * less than zero, then zero is used. The concrete subclass may enforce an&#10;     * upper limit to this value appropriate to the numeric type being formatted.&#10;     * @see #getMaximumIntegerDigits&#10;     */" />
      <item value="异常" />
      <item value="boundary Gap" />
      <item value="    /**&#10;     * Parses the string argument as an unsigned integer in the radix&#10;     * specified by the second argument.  An unsigned integer maps the&#10;     * values usually associated with negative numbers to positive&#10;     * numbers larger than {@code MAX_VALUE}.&#10;     *&#10;     * The characters in the string must all be digits of the&#10;     * specified radix (as determined by whether {@link&#10;     * java.lang.Character#digit(char, int)} returns a nonnegative&#10;     * value), except that the first character may be an ASCII plus&#10;     * sign {@code '+'} ({@code '\u005Cu002B'}). The resulting&#10;     * integer value is returned.&#10;     *&#10;     * &lt;p&gt;An exception of type {@code NumberFormatException} is&#10;     * thrown if any of the following situations occurs:&#10;     * &lt;ul&gt;&#10;     * &lt;li&gt;The first argument is {@code null} or is a string of&#10;     * length zero.&#10;     *&#10;     * &lt;li&gt;The radix is either smaller than&#10;     * {@link java.lang.Character#MIN_RADIX} or&#10;     * larger than {@link java.lang.Character#MAX_RADIX}.&#10;     *&#10;     * &lt;li&gt;Any character of the string is not a digit of the specified&#10;     * radix, except that the first character may be a plus sign&#10;     * {@code '+'} ({@code '\u005Cu002B'}) provided that the&#10;     * string is longer than length 1.&#10;     *&#10;     * &lt;li&gt;The value represented by the string is larger than the&#10;     * largest unsigned {@code int}, 2&lt;sup&gt;32&lt;/sup&gt;-1.&#10;     *&#10;     * &lt;/ul&gt;&#10;     *&#10;     *&#10;     * @param      s   the {@code String} containing the unsigned integer&#10;     *                  representation to be parsed&#10;     * @param      radix   the radix to be used while parsing {@code s}.&#10;     * @return     the integer represented by the string argument in the&#10;     *             specified radix.&#10;     * @throws     NumberFormatException if the {@code String}&#10;     *             does not contain a parsable {@code int}.&#10;     * @since 1.8&#10;     */" />
      <item value="被动" />
      <item value="/**&#10;     * Returns a string that is a substring of this string. The&#10;     * substring begins with the character at the specified index and&#10;     * extends to the end of this string. &lt;p&gt;&#10;     * Examples:&#10;     * &lt;blockquote&gt;&lt;pre&gt;&#10;     * &quot;unhappy&quot;.substring(2) returns &quot;happy&quot;&#10;     * &quot;Harbison&quot;.substring(3) returns &quot;bison&quot;&#10;     * &quot;emptiness&quot;.substring(9) returns &quot;&quot; (an empty string)&#10;     * &lt;/pre&gt;&lt;/blockquote&gt;&#10;     *&#10;     * @param      beginIndex   the beginning index, inclusive.&#10;     * @return     the specified substring.&#10;     * @exception  IndexOutOfBoundsException  if&#10;     *             {@code beginIndex} is negative or larger than the&#10;     *             length of this {@code String} object.&#10;     */" />
      <item value="the" />
      <item value="Duplicated code fragment " />
      <item value="series" />
      <item value="SQL Syntax Error Exception" />
      <item value="校验码" />
      <item value="流水号" />
      <item value="流水" />
      <item value="出厂" />
      <item value=" &lt;insert id=&quot;saveOrUpdate&quot;&gt;&#10;        insert into inclination_device&#10;        &lt;trim prefix=&quot;(&quot; suffix=&quot;)&quot; suffixOverrides=&quot;,&quot;&gt;&#10;            &lt;if test=&quot;deviceId != null&quot;&gt;&#10;                device_id,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;name != null&quot;&gt;&#10;                `name`,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;description != null&quot;&gt;&#10;                description,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;manufacturerId != null&quot;&gt;&#10;                manufacturer_id,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;manufacturerName != null&quot;&gt;&#10;                manufacturer_name,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;deviceType != null&quot;&gt;&#10;                device_type,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;model != null&quot;&gt;&#10;                model,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;nodeId != null&quot;&gt;&#10;                node_id,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;status != null&quot;&gt;&#10;                `status`,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;statusDetail != null&quot;&gt;&#10;                status_detail,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;companyCode != null&quot;&gt;&#10;                company_code,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;updateTime != null&quot;&gt;&#10;                update_time,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;createTime != null&quot;&gt;&#10;                create_time,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;delFlag != null&quot;&gt;&#10;                del_flag,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;mac != null&quot;&gt;&#10;                mac,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;location != null&quot;&gt;&#10;                `location`,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;swVersion != null&quot;&gt;&#10;                sw_version,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;fwVersion != null&quot;&gt;&#10;                fw_version,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;hwVersion != null&quot;&gt;&#10;                hw_version,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;protocolType != null&quot;&gt;&#10;                protocol_type,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;bridgeId != null&quot;&gt;&#10;                bridge_id,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;mute != null&quot;&gt;&#10;                mute,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;supportedSecurity != null&quot;&gt;&#10;                supported_security,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;isSecurity != null&quot;&gt;&#10;                is_security,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;signalStrength != null&quot;&gt;&#10;                signal_strength,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;sigVersion != null&quot;&gt;&#10;                sig_version,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;serialNumber != null&quot;&gt;&#10;                serial_number,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;batteryLevel != null&quot;&gt;&#10;                battery_level,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;lng != null&quot;&gt;&#10;                lng,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;lat != null&quot;&gt;&#10;                lat,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;type != null&quot;&gt;&#10;                type,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;xZero != null&quot;&gt;&#10;                x_zero,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;yZero != null&quot;&gt;&#10;                y_zero,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;timeInterval != null&quot;&gt;&#10;                time_interval,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;defence != null&quot;&gt;&#10;                defence,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alarmInterval != null&quot;&gt;&#10;                alarm_interval,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;xAlram != null&quot;&gt;&#10;                x_alram,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;yAlarm != null&quot;&gt;&#10;                y_alarm,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alramLazy != null&quot;&gt;&#10;                alram_lazy,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alarmAxis != null&quot;&gt;&#10;                alarm_axis,&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;ipPort != null&quot;&gt;&#10;                ip_port,&#10;            &lt;/if&gt;&#10;&#10;        &lt;/trim&gt;&#10;        &lt;trim prefix=&quot;values (&quot; suffix=&quot;)&quot; suffixOverrides=&quot;,&quot;&gt;&#10;            &lt;if test=&quot;deviceId != null&quot;&gt;&#10;                #{deviceId,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;name != null&quot;&gt;&#10;                #{name,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;description != null&quot;&gt;&#10;                #{description,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;manufacturerId != null&quot;&gt;&#10;                #{manufacturerId,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;manufacturerName != null&quot;&gt;&#10;                #{manufacturerName,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;deviceType != null&quot;&gt;&#10;                #{deviceType,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;model != null&quot;&gt;&#10;                #{model,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;nodeId != null&quot;&gt;&#10;                #{nodeId,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;status != null&quot;&gt;&#10;                #{status,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;statusDetail != null&quot;&gt;&#10;                #{statusDetail,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;companyCode != null&quot;&gt;&#10;                #{companyCode,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;updateTime != null&quot;&gt;&#10;                #{updateTime,jdbcType=TIMESTAMP},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;createTime != null&quot;&gt;&#10;                #{createTime,jdbcType=TIMESTAMP},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;delFlag != null&quot;&gt;&#10;                #{delFlag,jdbcType=CHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;mac != null&quot;&gt;&#10;                #{mac,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;location != null&quot;&gt;&#10;                #{location,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;swVersion != null&quot;&gt;&#10;                #{swVersion,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;fwVersion != null&quot;&gt;&#10;                #{fwVersion,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;hwVersion != null&quot;&gt;&#10;                #{hwVersion,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;protocolType != null&quot;&gt;&#10;                #{protocolType,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;bridgeId != null&quot;&gt;&#10;                #{bridgeId,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;mute != null&quot;&gt;&#10;                #{mute,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;supportedSecurity != null&quot;&gt;&#10;                #{supportedSecurity,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;isSecurity != null&quot;&gt;&#10;                #{isSecurity,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;signalStrength != null&quot;&gt;&#10;                #{signalStrength,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;sigVersion != null&quot;&gt;&#10;                #{sigVersion,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;serialNumber != null&quot;&gt;&#10;                #{serialNumber,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;batteryLevel != null&quot;&gt;&#10;                #{batteryLevel,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;lng != null&quot;&gt;&#10;                #{lng,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;lat != null&quot;&gt;&#10;                #{lat,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;type != null&quot;&gt;&#10;                #{type,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;xZero != null&quot;&gt;&#10;                #{x_zero},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;yZero != null&quot;&gt;&#10;                #{y_zero},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;timeInterval != null&quot;&gt;&#10;                #{time_interval},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;defence != null&quot;&gt;&#10;                #{defence},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alarmInterval != null&quot;&gt;&#10;                #{alarm_interval},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;xAlram != null&quot;&gt;&#10;                #{x_alram},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;yAlarm != null&quot;&gt;&#10;                #{y_alarm},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alramLazy != null&quot;&gt;&#10;                #{alram_lazy},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alarmAxis != null&quot;&gt;&#10;                #{alarm_axis},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;ipPort != null&quot;&gt;&#10;                #{ip_port},&#10;            &lt;/if&gt;&#10;        &lt;/trim&gt;&#10;        on duplicate key update&#10;        &lt;trim suffixOverrides=&quot;,&quot;&gt;&#10;            &lt;if test=&quot;commandValue != null&quot;&gt;&#10;                command_value = #{commandValue},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;companyCode != null&quot;&gt;&#10;                company_code = #{companyCode},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;delFlag != null&quot;&gt;&#10;                del_flag = #{delFlag,jdbcType=CHAR},&#10;            &lt;/if&gt;&#10;&#10;            &lt;if test=&quot;nodeId != null&quot;&gt;&#10;                node_id = #{nodeId,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;name != null&quot;&gt;&#10;                `name` = #{name,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;description != null&quot;&gt;&#10;                description = #{description,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;manufacturerId != null&quot;&gt;&#10;                manufacturer_id = #{manufacturerId,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;manufacturerName != null&quot;&gt;&#10;                manufacturer_name = #{manufacturerName,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;mac != null&quot;&gt;&#10;                mac = #{mac,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;location != null&quot;&gt;&#10;                `location` = #{location,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;deviceType != null&quot;&gt;&#10;                device_type = #{deviceType,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;model != null&quot;&gt;&#10;                model = #{model,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;swVersion != null&quot;&gt;&#10;                sw_version = #{swVersion,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;fwVersion != null&quot;&gt;&#10;                fw_version = #{fwVersion,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;hwVersion != null&quot;&gt;&#10;                hw_version = #{hwVersion,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;protocolType != null&quot;&gt;&#10;                protocol_type = #{protocolType,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;bridgeId != null&quot;&gt;&#10;                bridge_id = #{bridgeId,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;status != null&quot;&gt;&#10;                `status` = #{status,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;statusDetail != null&quot;&gt;&#10;                status_detail = #{statusDetail,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;mute != null&quot;&gt;&#10;                mute = #{mute,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;supportedSecurity != null&quot;&gt;&#10;                supported_security = #{supportedSecurity,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;isSecurity != null&quot;&gt;&#10;                is_security = #{isSecurity,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;signalStrength != null&quot;&gt;&#10;                signal_strength = #{signalStrength,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;sigVersion != null&quot;&gt;&#10;                sig_version = #{sigVersion,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;serialNumber != null&quot;&gt;&#10;                serial_number = #{serialNumber,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;batteryLevel != null&quot;&gt;&#10;                battery_level = #{batteryLevel,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;lng != null&quot;&gt;&#10;                lng = #{lng,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;lat != null&quot;&gt;&#10;                lat = #{lat,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;type != null&quot;&gt;&#10;                type = #{type,jdbcType=VARCHAR},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;xZero != null&quot;&gt;&#10;                x_zero =#{xZero},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;yZero != null&quot;&gt;&#10;                y_zero =#{yZero},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;timeInterval != null&quot;&gt;&#10;                time_interval  =#{timeInterval},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;defence != null&quot;&gt;&#10;                defence =#{defence},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alarmInterval != null&quot;&gt;&#10;                alarm_interval  =#{alarmInterval},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;xAlram != null&quot;&gt;&#10;                x_alram  =#{xAlram},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;yAlarm != null&quot;&gt;&#10;                y_alarm  =#{yAlarm},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alramLazy != null&quot;&gt;&#10;                alram_lazy =#{alramLazy},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;alarmAxis != null&quot;&gt;&#10;                alarm_axis =#{alarmAxis},&#10;            &lt;/if&gt;&#10;            &lt;if test=&quot;ipPort != null&quot;&gt;&#10;                ip_port =#{ipPort},&#10;            &lt;/if&gt;&#10;        &lt;/trim&gt;&#10;&#10;    &lt;/insert&gt;" />
      <item value="charts" />
      <item value="上报" />
      <item value="间隔" />
      <item value="chars" />
      <item value="char" />
      <item value="necessary" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="209" />
        <entry key="ENGLISH" value="210" />
        <entry key="POLISH" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="foldOriginal" value="true" />
    <option name="ignoreRegExp" value="" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Segoe UI" />
    <option name="primaryFontFamily" value="Microsoft YaHei UI" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6787a6ce50600ef8" />
      </youdao-translate>
    </option>
  </component>
</application>