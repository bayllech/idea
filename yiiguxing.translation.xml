<application>
  <component name="AppStorage">
    <histories>
      <item value="IMAG" />
      <item value="macro" />
      <item value="* THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS&#10; * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED&#10; * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE&#10; * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY&#10; * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL&#10; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE&#10; * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS&#10; * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,&#10; * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10; * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10; * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE." />
      <item value="Allocates" />
      <item value="appropriate" />
      <item value="take into" />
      <item value="peer" />
      <item value="Never mind this bit" />
      <item value="Resume" />
      <item value="Generate two sine waves of different frequencies and amplitudes." />
      <item value="sender" />
      <item value="stable" />
      <item value="compare To" />
      <item value="Violations" />
      <item value="constraint" />
      <item value="检测" />
      <item value="业务" />
      <item value="capacity" />
      <item value="* &lt;p&gt; The new buffer's position will be zero, its limit will be its&#10;     * capacity, its mark will be undefined, and each of its elements will be&#10;     * initialized to zero.  It will have a {@link #array backing array},&#10;     * and its {@link #arrayOffset array offset} will be zero." />
      <item value="nested" />
      <item value="trusted" />
      <item value="温度" />
      <item value="Tempurature" />
      <item value="align" />
      <item value="宽高" />
      <item value="current" />
      <item value="ajax" />
      <item value="elem" />
      <item value="render" />
      <item value="range" />
      <item value="decorator" />
      <item value="Literals" />
      <item value="feature" />
      <item value="raw" />
      <item value="column" />
      <item value="排" />
      <item value="列" />
      <item value="行列" />
      <item value="radius" />
      <item value="amplitude" />
      <item value="Blur" />
      <item value="shape" />
      <item value="Angle" />
      <item value="Cluster" />
      <item value="Clusterer" />
      <item value="灰色" />
      <item value="Greenwich" />
      <item value="/** * Obtains an instance of {@code ZoneId} from an ID ensuring that the * ID is valid and available for use. * &lt;p&gt; * This method parses the ID producing a {@code ZoneId} or {@code ZoneOffset}. * A {@code ZoneOffset} is returned if the ID is 'Z', or starts with '+' or '-'. * The result will always be a valid ID for which {@link ZoneRules} can be obtained. * &lt;p&gt; * Parsing matches the zone ID step by step as follows. * &lt;ul&gt; * &lt;li&gt;If the zone ID equals 'Z', the result is {@code ZoneOffset.UTC}. * &lt;li&gt;If the zone ID consists of a single letter, the zone ID is invalid * and {@code DateTimeException} is thrown. * &lt;li&gt;If the zone ID starts with '+' or '-', the ID is parsed as a * {@code ZoneOffset} using {@link ZoneOffset#of(String)}. * &lt;li&gt;If the zone ID equals 'GMT', 'UTC' or 'UT' then the result is a {@code ZoneId} * with the same ID and rules equivalent to {@code ZoneOffset.UTC}. * &lt;li&gt;If the zone ID starts with 'UTC+', 'UTC-', 'GMT+', 'GMT-', 'UT+' or 'UT-' * then the ID is a prefixed offset-based ID. The ID is split in two, with * a two or three letter prefix and a suffix starting with the sign. * The suffix is parsed as a {@link ZoneOffset#of(String) ZoneOffset}. * The result will be a {@code ZoneId} with the specified UTC/GMT/UT prefix * and the normalized offset ID as per {@link ZoneOffset#getId()}. * The rules of the returned {@code ZoneId} will be equivalent to the * parsed {@code ZoneOffset}. * &lt;li&gt;All other IDs are parsed as region-based zone IDs. Region IDs must * match the regular expression &lt;code&gt;[A-Za-z][A-Za-z0-9~/._+-]+&lt;/code&gt; * otherwise a {@code DateTimeException} is thrown. If the zone ID is not * in the configured set of IDs, {@code ZoneRulesException} is thrown. * The detailed format of the region ID depends on the group supplying the data. * The default set of data is supplied by the IANA Time Zone Database (TZDB). * This has region IDs of the form '{area}/{city}', such as 'Europe/Paris' or 'America/New_York'." />
      <item value="anchor" />
      <item value="inappropriate" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="79" />
        <entry key="ENGLISH" value="79" />
        <entry key="POLISH" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="FILIPINO" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="foldOriginal" value="true" />
    <option name="ignoreRegExp" value="" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Segoe UI" />
    <option name="primaryFontFamily" value="Microsoft YaHei UI" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6787a6ce50600ef8" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>