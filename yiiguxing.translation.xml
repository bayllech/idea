<application>
  <component name="AppStorage">
    <histories>
      <item value="低位" />
      <item value="小端模式" />
      <item value="分片" />
      <item value="风向" />
      <item value="Unsigned" />
      <item value="规约" />
      <item value="Duplicate condition" />
      <item value="additivity" />
      <item value="present" />
      <item value="app throttle exceed" />
      <item value="exceed" />
      <item value="throttle" />
      <item value="详情" />
      <item value="Telescopic Joint" />
      <item value="Telescopic" />
      <item value="amend" />
      <item value="上限" />
      <item value="下降" />
      <item value="突变" />
      <item value="内部" />
      <item value="内外网" />
      <item value="COMPILATION" />
      <item value=" (tbushing.currentRms == 0 ? 'bg-gray'" />
      <item value="正常" />
      <item value="补偿" />
      <item value="offset" />
      <item value="strain" />
      <item value="月" />
      <item value="上一个" />
      <item value="异常" />
      <item value="额定" />
      <item value="安装" />
      <item value="位置" />
      <item value="分类" />
      <item value="等级" />
      <item value="encounter" />
      <item value="evaluate" />
      <item value="&#10;      Returns whether any elements of this stream match the provided&#10;      predicate.  May not evaluate the predicate on all elements if not&#10;      necessary for determining the result.  If the stream is empty then&#10;      {@code false} is returned and the predicate is not evaluated.&#10;     &#10;      &lt;p&gt;This is a &lt;a href=&quot;package-summary.htmlStreamOps&quot;&gt;short-circuiting&#10;      terminal operation&lt;a&gt;.&#10;     &#10;      @apiNote&#10;      This method evaluates the &lt;em&gt;existential quantification&lt;em&gt; of the&#10;      predicate over the elements of the stream (for some x P(x)).&#10;     &#10;      @param predicate a &lt;a href=&quot;package-summary.htmlNonInterference&quot;&gt;non-interfering&lt;a&gt;,&#10;                       &lt;a href=&quot;package-summary.htmlStatelessness&quot;&gt;stateless&lt;a&gt;&#10;                       predicate to apply to elements of this stream&#10;      @return {@code true} if any elements of the stream match the provided&#10;      predicate, otherwise {@code false}&#10;     " />
      <item value="    &#10;      Return {@code true} if there is a value present, otherwise {@code false}.&#10;     &#10;      @return {@code true} if there is a value present, otherwise {@code false}&#10;     " />
      <item value="存在" />
      <item value="NUMERIC" />
      <item value="occurrences" />
      <item value="注册" />
      <item value="北向接口" />
      <item value="platform" />
      <item value="参数帧" />
      <item value="上电复位" />
      <item value="    &#10;      Compares two Dates for ordering.&#10;     &#10;      @param   anotherDate   the &lt;code&gt;Date&lt;code&gt; to be compared.&#10;      @return  the value &lt;code&gt;0&lt;code&gt; if the argument Date is equal to&#10;               this Date; a value less than &lt;code&gt;0&lt;code&gt; if this Date&#10;               is before the Date argument; and a value greater than&#10;           &lt;code&gt;0&lt;code&gt; if this Date is after the Date argument.&#10;      @since   1.2&#10;      @exception NullPointerException if &lt;code&gt;anotherDate&lt;code&gt; is null.&#10;     " />
      <item value="安全运行天数" />
      <item value="&#10;      Obtains a {@code Duration} representing the duration between two temporal objects.&#10;      &lt;p&gt;&#10;      This calculates the duration between two temporal objects. If the objects&#10;      are of different types, then the duration is calculated based on the type&#10;      of the first object. For example, if the first argument is a {@code LocalTime}&#10;      then the second argument is converted to a {@code LocalTime}.&#10;      &lt;p&gt;&#10;      The specified temporal objects must support the {@link ChronoUnitSECONDS SECONDS} unit.&#10;      For full accuracy, either the {@link ChronoUnitNANOS NANOS} unit or the&#10;      {@link ChronoFieldNANO_OF_SECOND NANO_OF_SECOND} field should be supported.&#10;      &lt;p&gt;&#10;      The result of this method can be a negative period if the end is before the start.&#10;      To guarantee to obtain a positive duration call {@link abs()} on the result.&#10;     &#10;      @param startInclusive  the start instant, inclusive, not null&#10;      @param endExclusive  the end instant, exclusive, not null&#10;      @return a {@code Duration}, not null&#10;      @throws DateTimeException if the seconds between the temporals cannot be obtained&#10;      @throws ArithmeticException if the calculation exceeds the capacity of {@code Duration}&#10;     " />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="404" />
        <entry key="ENGLISH" value="404" />
        <entry key="POLISH" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="HINDI" value="3" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1642572451783" />
  </component>
  <component name="Settings">
    <option name="foldOriginal" value="true" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Segoe UI" />
    <option name="primaryFontFamily" value="Microsoft YaHei UI" />
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6787a6ce50600ef8" />
      </youdao-translate>
    </option>
  </component>
</application>