<application>
  <component name="AppStorage">
    <histories>
      <item value="persistence" />
      <item value="Delivery" />
      <item value="Page" />
      <item value="parsing a meta element's content: ';' is not a valid key-value pair separator. Please use ',' instead" />
      <item value="/**&#10; * A container for settings for the generation of getters and setters.&#10; * &lt;p&gt;&#10; * Complete documentation is found at &lt;a href=&quot;https://projectlombok.org/features/experimental/Accessors&quot;&gt;the project lombok features page for &amp;#64;Accessors&lt;/a&gt;.&#10; * &lt;p&gt;&#10; * Using this annotation does nothing by itself; an annotation that makes lombok generate getters and setters,&#10; * such as {@link lombok.Setter} or {@link lombok.Data} is also required.&#10; */" />
      <item value="Accessors" />
      <item value="ReflectorFactory" />
      <item value="Reflector Factory" />
      <item value="declared" />
      <item value="All-language autocompleter — TabNine uses machine learning to help you write code faster." />
      <item value="Learn basic shortcuts and essential features interactively – right inside the IDE. No need to read long manuals or look for screencasts. Just install this plugin, open the IDE, and go to the Learn tool window to start training. The course includes 5 modules: Editor Basics, Completions, Refactorings, Code Assistance, and Navigation. Each module has several short lessons with quick tasks focusing on one or two useful shortcuts or features. Your feedback is much appreciated here: jb.gg/training-plugin-feedback Found a bug or have a feature to suggest? Welcome to the tracker: https://training.myjetbrains.com/youtrack/issues/TP" />
      <item value="Learn basic shortcuts and essential features interactively – right inside the IDE. No need to read long manuals or look for screencasts. Just install this plugin, open the IDE, and go to the Learn tool window to start training.&#10;The course includes 5 modules: Editor Basics, Completions, Refactorings, Code Assistance, and Navigation. Each module has several short lessons with quick tasks focusing on one or two useful shortcuts or features.&#10;Your feedback is much appreciated here: jb.gg/training-plugin-feedback&#10;Found a bug or have a feature to suggest? Welcome to the tracker: https://training.myjetbrains.com/youtrack/issues/TP" />
      <item value="Invocation" />
      <item value="nested" />
      <item value="to Upper Case" />
      <item value="terminated" />
      <item value="Rejected Execution Exception" />
      <item value="preserve" />
      <item value="Inspection info: Reports a variety of redundant String-related operations like calling String.toString() or String.substring(0)" />
      <item value="Returns the {@link ChannelFuture} which will be notified when this&#10;     * channel is closed.  This method always returns the same future instance." />
      <item value="//                readyFft(clientMessage, hexList);&#10;                String usBoardId = ConvertCode.hexReverse(hexList.get(4), hexList.get(5));&#10;                //扩展位用于usTrig&#10;                String usPadding = ConvertCode.hexReverse(hexList.get(6), hexList.get(7));&#10;                String lu = ConvertCode.hexReverse(hexList.get(8), hexList.get(9));&#10;                String usPressure = ConvertCode.hexReverse(hexList.get(10), hexList.get(11));&#10;&#10;                String seconds = ConvertCode.hexReverse(hexList.get(12), hexList.get(13), hexList.get(14), hexList.get(15));&#10;                String nanoseconds = ConvertCode.hexReverse(hexList.get(16), hexList.get(17), hexList.get(18), hexList.get(19));&#10;&#10;                TWaveMsgOriginEntity entity = new TWaveMsgOriginEntity();&#10;                TWaveMsgHandleEntity handleEntity = new TWaveMsgHandleEntity();&#10;&#10;                //储存原始数据，写入文件&#10;                entity.setBushingId(lu);&#10;                entity.setOriginData(clientMessage);&#10;                entity.setLocalDateTime(LocalDateTime.now());&#10;&#10;                //同一秒数据，赋值相同fftid&#10;                String fftId = null;&#10;                long sTime = ConvertCode.hexToLong(seconds);&#10;                if (timeFft.containsKey(sTime)) {&#10;                    fftId = timeFft.get(sTime);&#10;                    entity.setFftId(fftId);&#10;                    handleEntity.setFirst(false);&#10;                    sb.append(entity.toString());&#10;                } else {&#10;                    fftId = UUIDS.getFftId();&#10;                    entity.setFftId(fftId);&#10;                    handleEntity.setFirst(true);&#10;                    sb.append(entity.toString());&#10;&#10;                    if (timeFft.size() &gt; 9) {&#10;                        timeFft.remove(timeFft.entrySet().iterator().next().getKey());&#10;                        fileTask.write(sb.toString());&#10;                        sb.setLength(0);&#10;                    }&#10;                    //监测是否所有套管都有新数据，还是已经断开无数据上来，通知前端&#10;                    //webSocket.sendMessage(JSON.toJSONString(alarmEntity));&#10;                    //&#10;                    timeFft.put(sTime, fftId);&#10;                }&#10;//                logger.debug(&quot;second = {}, fftid= {}&quot;,seconds,fftId);&#10;&#10;                List&lt;String&gt; fftList = new ArrayList&lt;&gt;(hexList.subList(20, hexList.size()));&#10;&#10;                if (fftList.size() == FFTW.NUM_POINTS * 2) {&#10;                    //预处理数据&#10;                    handleEntity.setFftId(fftId);&#10;                    handleEntity.setBoardId(usBoardId);&#10;                    handleEntity.setPressure(usPressure);&#10;                    handleEntity.setPadding(usPadding);&#10;                    handleEntity.setTimeScale(String.valueOf(ConvertCode.hexToLong(seconds))&#10;                            + &quot;+&quot; + String.valueOf(ConvertCode.hexToLong(nanoseconds)));&#10;&#10;                    int isExist = bushingService.isExist(usBoardId, lu);&#10;                    if (isExist == 0) {&#10;                        //储存套管信息&#10;                        TBushingEntity bushingEntity = new TBushingEntity();&#10;                        bushingEntity.setBoardId(usBoardId);&#10;                        bushingEntity.setLu(lu);&#10;&#10;                        bushingService.save(bushingEntity);&#10;                    } else {&#10;                        String bushingId = bushingService.queryBushingLu(usBoardId, lu);&#10;                        //abc三相与123路对应信息表已手动录入&#10;                        if (StringUtils.isNotEmpty(bushingId)) {&#10;                            handleEntity.setBushingId(bushingId);&#10;                            // 储存entity,用于定时fft计算&#10;//                            fft(handleEntity, fftList);&#10;                            handleEntity.setFftList(fftList);&#10;                            handleEntityList.add(handleEntity);&#10;                            fftw.setHandleEntityList(handleEntityList);&#10;                        }&#10;&#10;                    }&#10;&#10;                }&#10;&#10;            }" />
      <item value="* Copy the property values of the given source bean into the target bean.&#10;&#9; * &lt;p&gt;Note: The source and target classes do not have to match or even be derived&#10;&#9; * from each other, as long as the properties match. Any bean properties that the&#10;&#9; * source bean exposes but the target bean does not will silently be ignored.&#10;&#9; * &lt;p&gt;This is just a convenience method. For more complex transfer needs,&#10;&#9; * consider using a full BeanWrapper." />
      <item value="/**&#10;     * Adds all of the elements in the specified collection to this collection&#10;     * (optional operation).  The behavior of this operation is undefined if&#10;     * the specified collection is modified while the operation is in progress.&#10;     * (This implies that the behavior of this call is undefined if the&#10;     * specified collection is this collection, and this collection is&#10;     * nonempty.)" />
      <item value="传送" />
      <item value="/**&#10;     * A handler for rejected tasks that runs the rejected task&#10;     * directly in the calling thread of the {@code execute} method,&#10;     * unless the executor has been shut down, in which case the task&#10;     * is discarded.&#10;     */" />
      <item value="stderr" />
      <item value="schedule" />
      <item value="present" />
      <item value="存在" />
      <item value="exclusive" />
      <item value="inclusive" />
      <item value="占比" />
      <item value="计算" />
      <item value="系数" />
      <item value="校准" />
      <item value="series" />
      <item value="axis" />
      <item value="align" />
      <item value="legend" />
      <item value="label" />
      <item value="电压" />
      <item value="ordinate" />
      <item value="虚数" />
      <item value="truncation" />
      <item value="Integrity" />
      <item value="optional" />
      <item value="标准" />
      <item value="aqua" />
      <item value="清除" />
      <item value="音频" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="161" />
        <entry key="ENGLISH" value="166" />
        <entry key="POLISH" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="foldOriginal" value="true" />
    <option name="ignoreRegExp" value="" />
    <option name="keepFormat" value="true" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Segoe UI" />
    <option name="primaryFontFamily" value="Microsoft YaHei UI" />
    <option name="showWordsOnStartup" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6787a6ce50600ef8" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>